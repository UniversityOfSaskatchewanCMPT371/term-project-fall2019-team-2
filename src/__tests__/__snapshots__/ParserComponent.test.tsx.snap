// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`R1 Tests
 T1.2: Handling upload of CSVs with strange formatting Should cut off data in row if more vals than # of fields
 1`] = `
Object {
  "h1": 1,
  "h1_num": 1,
  "h2": 2,
  "h3": 3,
  "h4": 4,
  "index": 0,
}
`;

exports[`R1 Tests
 T1.2: Handling upload of CSVs with strange formatting Should cut off data in row if more vals than # of fields
 2`] = `
Object {
  "h1": 6,
  "h1_num": 6,
  "h2": 7,
  "h3": 8,
  "h4": 9,
  "index": 1,
}
`;

exports[`R1 Tests
 T1.2: Handling upload of CSVs with strange formatting Should cut off data in row if more vals than # of fields
 3`] = `
Object {
  "h1": 10,
  "h1_num": 10,
  "h2": 11,
  "h3": 12,
  "h4": 13,
  "index": 2,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 1`] = `
Object {
  "Date": "15-01-2000",
  "Date_num": Any<Number>,
  "SomeNum": 1,
  "SomeString": "hij",
  "index": 7,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 2`] = `
Object {
  "Date": "21-01-2000",
  "Date_num": Any<Number>,
  "SomeNum": 4,
  "SomeString": "abcd",
  "index": 8,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 3`] = `
Object {
  "Date": "01-01-1989",
  "Date_num": Any<Number>,
  "SomeNum": 5,
  "SomeString": "efg",
  "index": 0,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 4`] = `
Object {
  "Date": "01-01-1990",
  "Date_num": Any<Number>,
  "SomeNum": 1,
  "SomeString": "hij",
  "index": 1,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 5`] = `
Object {
  "Date": "01-01-1991",
  "Date_num": Any<Number>,
  "SomeNum": 4,
  "SomeString": "abcd",
  "index": 2,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 6`] = `
Object {
  "Date": "01-02-2000",
  "Date_num": Any<Number>,
  "SomeNum": 5,
  "SomeString": "efg",
  "index": 3,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 7`] = `
Object {
  "Date": "01-04-2000",
  "Date_num": Any<Number>,
  "SomeNum": 1,
  "SomeString": "hij",
  "index": 4,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 8`] = `
Object {
  "Date": "01-07-2000",
  "Date_num": Any<Number>,
  "SomeNum": 4,
  "SomeString": "abcd",
  "index": 5,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with sorted dates
 DD-MM-YYYY 9`] = `
Object {
  "Date": "11-01-2000",
  "Date_num": Any<Number>,
  "SomeNum": 5,
  "SomeString": "efg",
  "index": 6,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 1`] = `
Object {
  "Date": "21-01-2000",
  "Date_num": Any<Number>,
  "SomeNum": 4,
  "SomeString": "abcd",
  "index": 3,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 2`] = `
Object {
  "Date": "15-01-2000",
  "Date_num": Any<Number>,
  "SomeNum": 1,
  "SomeString": "hij",
  "index": 5,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 3`] = `
Object {
  "Date": "01-01-1989",
  "Date_num": Any<Number>,
  "SomeNum": 5,
  "SomeString": "efg",
  "index": 7,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 4`] = `
Object {
  "Date": "01-01-1990",
  "Date_num": Any<Number>,
  "SomeNum": 1,
  "SomeString": "hij",
  "index": 8,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 5`] = `
Object {
  "Date": "01-01-1991",
  "Date_num": Any<Number>,
  "SomeNum": 4,
  "SomeString": "abcd",
  "index": 6,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 6`] = `
Object {
  "Date": "01-02-2000",
  "Date_num": Any<Number>,
  "SomeNum": 5,
  "SomeString": "efg",
  "index": 1,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 7`] = `
Object {
  "Date": "01-04-2000",
  "Date_num": Any<Number>,
  "SomeNum": 1,
  "SomeString": "hij",
  "index": 2,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 8`] = `
Object {
  "Date": "01-07-2000",
  "Date_num": Any<Number>,
  "SomeNum": 4,
  "SomeString": "abcd",
  "index": 0,
}
`;

exports[`R1 Tests
 T1.3: .csv with different valid date formats accepted
 should parse .csv with unsorted dates & sort data by date
 9`] = `
Object {
  "Date": "11-01-2000",
  "Date_num": Any<Number>,
  "SomeNum": 5,
  "SomeString": "efg",
  "index": 4,
}
`;
